Aim: We are simulating a grocery database that allows you to track items, 
prices, quantities, expenditures, and stock of a grocery store. We want to 
essentially track grocery store transactions and allow for customer interaction 
with the store. We divided our functionality into 4 modules: Items, Bagofgoods,
Expenditures, Store.

Packages needed:
OCaml and OPAM

Installation steps:
1. Clone our git repository: 
git clone https://github.coecis.cornell.edu/ay332/cs3110proj
2. Enter directory of project
cd (path to cs3110proj)
3. install opam
4. dune build 

Usage:
So far, we have only included command line functionality for creating an item and
inserting that one item in a bag, as well as changing the price of an item. 
In the future, we will implement functionality for 
creating a bag of multiple goods 
and interacting with the store on the command line: 

1. After dune build, insert command: 
make grocery

You should see this message:
Welcome to Grocery. 

1. Create new item 2. Change item price

Please enter your choice of 1 or 2

_______________________________________________________________________________________

2. Type in your choice:
        
    If you chose choice 1, to create an item, type in its [name price quantity]

    After correctly inputting in this form, 
    you should receive a message that says:

Successfully created item: NAME ENTERED with price: PRICE ENTERED and quantity: QUANTITY ENTERED
Bag now contains: NAME ENTERED (Price: PRICE ENTERED, Quantity: QUANTITY ENTERED)

    If you chose 2, to modify a price, type in the product's [name price quantity added_amount]

    After correctly inputting in this form, 
    you should receive a message that says:

Successfully changed item: "NAME ENTERED" with price: ORIGINAl PRICE ENTERED + PRICE ADDED and quantity: QUANTITY ENTERED

_______________________________________________________________________________________________________________________________________
Example for choice 1: 
dune exec bin/main.exe
        Welcome to Grocery. 

        1. Create new item 2. Change item price

        Please enter your choice of 1 or 2

        1

        Welcome to Grocery. 

        Please enter the name, price, and quantity of the item you want to create:
        "apples" 1 5 
        Successfully created item: "apples" with price: 1 and quantity: 5
        Bag now contains: "apples" (Price: 1, Quantity: 5)

Example for choice 2:
dune exec bin/main.exe
        Welcome to Grocery. 

        1. Create new item 2. Change item price

        Please enter your choice of 1 or 2

        2

        Welcome to Grocery. 

        Please enter the name, price, quantity, and new_price of the item you want to create:
        "apples" 1 5 3
        Successfully changed item: "apples" with price: 4 and quantity: 5

Contact Info:
Belle Hu (bh552)
Aileen Huang (aeh245)
Yuhan Sun (ys728)
Alina Yuan (ay332)